#encoding: utf-8

require 'thread'

module ADONIS
module EXPLOIT

class SSLTestBase < Base

    def ssl_test_init id, service_name, father_node_name
        name = "ssl_#{service_name}_test"
        desc = "SSL-#{service_name}漏洞检测"
        exploit_init(id, name, father_node_name, 50, desc)
	if ['smtp', 'pop3', 'imap', 'ftp', 'xmpp'].include?(service_name) 
		@service = service_name
	else 
		@service = nil
	end
        set_default_cmd
    end

    def set_default_cmd
        @cmd = File.join(::ADONIS::BinDir, "ssl_test.py")
	@cmd += " -s #{@service}" unless @service.blank?
    end

    def exploit_func host
	port = host.get_tmp_msg 'port'
        command = "#{@cmd} -p #{port} #{host.ip}"
        ::ADONIS.exploit_logger.info("#{self.class}, exploit_func #{id}: #{host.ip} by command: #{command}" )
        out = `#{command}`
        if out =~ /##yes##/
            return exploit_success out, port ,@service
        else
            return exploit_failed out
        end
    end

end

end
end

